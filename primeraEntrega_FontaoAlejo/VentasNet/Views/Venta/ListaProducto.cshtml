@using VentasNet.Infra.DTO.Request;
@model IEnumerable<ProductoRequest>;
@{
    ViewBag.Title = "Lista de Productos";
    List<Item> carrito = ViewBag.Carrito ?? new List<Item>();
}

<div class="container mt-5">
    <div class="input-group mb-3">
        <input type="text" id="filtroNombre" placeholder="Filtrar por nombre" class="form-control">
        <div class="input-group-append">
		    <button class="btn btn-outline-primary" type="button" id="btnBuscar">Buscar</button>
        </div>
	</div>
    <div id="seccionResultadosBusqueda" style="display: none;">
    <h2>Resultados de la Búsqueda</h2>
    <table id="tablaResultados" class="table table-striped">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Descripción</th>
                <th>Precio</th>
                <th>Código</th>
                <th>Cantidad</th>
                <th>Agregar</th>
            </tr>
        </thead>
        <tbody id="resultados"></tbody>
    </table>

	</div>  
    <h2>Lista de todos los Productos</h2>
    <table class="table table-striped" id="tablaProductos">
        <thead>
            <tr>
                <th>Id</th>
                <th>Nombre</th>
                <th>Descripción</th>
                <th>Precio</th>
                <th>Código</th>
                <th>Cantidad</th>
                <th>Agregar</th>
            </tr>
        </thead>
        <tbody>
            @foreach (ProductoRequest producto in ViewBag.Producto)
            {
                <tr>
                    <td>@producto.Id</td>
                    <td>@producto.NombreProducto</td>
                    <td>@producto.Descripcion</td>
                    <td>@producto.ImporteProducto</td>
                    <td>@producto.Codigo</td>
                    <td><input type="number" min="1" value="1" class="form-control cantidad-input" /></td>
                    <td><button class="btn btn-primary agregar-btn">Agregar</button></td>
                </tr>
            }
        </tbody>
    </table>
    <h2>Compra</h2>
    <h4>Cliente</h4>
	<div class="container mt-4">
		<div class="row">
			<div class="col-md-3">
				<div class="form-group">
					<label for="nombreCliente">Nombre:</label>
					<input type="text" class="form-control" id="nombreCliente" name="nombreCliente" placeholder="Ingrese el nombre del cliente" />
				</div>
			</div>
			<div class="col-md-3">
				<div class="form-group">
					<label for="cuitCliente">CUIT:</label>
					<input type="text" class="form-control" id="cuitCliente" name="cuitCliente" placeholder="Ingrese el CUIT del cliente" />
				</div>
			</div>
			<div class="col-md-3">
				<div class="form-group">
					<label for="apellidoCliente">Apellido:</label>
					<input type="text" class="form-control" id="apellidoCliente" name="apellidoCliente" placeholder="Ingrese el apellido del cliente" />
				</div>
			</div>
			<div class="col-md-2">
                <button type="button" class="btn btn-primary mt-4" id="btnBuscarCliente">Buscar</button>
			</div>
		</div>
        <label for="dropdownClientes">Seleccionar Cliente:</label>
        <select class="form-control" id="dropdownClientes" name="dropdownClientes">
            <option value="">-- Seleccionar --</option>
        </select>
	</div>
    <h4>Carrito</h4>
    <table id="carrito" class="table table-striped">
        <thead>
            <tr>
                <th>Nombre</th>
                <th>Importe</th>
                <th>Cantidad</th>
                <th>Subtotal</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in carrito)
            {
                <tr>
                    <td>@item.Producto.NombreProducto</td>
                    <td>@item.Producto.ImporteProducto</td>
                    <td>@item.Cantidad</td>
                    <td>@item.SubtotalItem</td>
                </tr>
            }
        </tbody>
    </table>
    <div id="alertaCarritoVacio" class="alert alert-warning" role="alert" style="display: none;">
        No se puede generar la venta sin productos.
    </div>
    <div id="alertaClienteVacio" class="alert alert-warning" role="alert" style="display: none;">
        Debe llenar algún campo para buscar al cliente.
    </div>
    

    <div style="display: flex; justify-content: flex-end;">
        <div style="display: flex; justify-content: flex-end;">
            <label for="formaDePago">Forma de Pago:</label>
            <select id="formaDePago" class="form-control">
                @foreach (var formaDePago in ViewBag.FormasDePago)
                {
                    <option value="@formaDePago.Id">@formaDePago.Entidad @formaDePago.Descripcion</option>
                }
            </select>
        </div>
        <button id="btnGenerarVenta" class="btn btn-primary">Generar venta</button>
	</div>

</div>
<script>
    $(document).ready(function () {
        var totalCarrito = 0;

        $(document).on("click", ".agregar-btn", function () {
            var fila = $(this).closest("tr");
            var id = fila.find("td:eq(0)").text();
            var nombre = fila.find("td:eq(1)").text();
            var importe = fila.find("td:eq(3)").text();
            var cantidad = fila.find(".cantidad-input").val();
            agregarAlCarrito(id, nombre, importe, cantidad);
        });
        function agregarAlCarrito(id, nombre, importe, cantidad) {
            var subtotalItem = importe * cantidad;
            totalCarrito += subtotalItem;
            $("#totalCarrito").text("Total a pagar: " + totalCarrito);
            $("#carrito tbody").append("<tr><td>" + nombre + "</td><td>" + importe + "</td><td>" + cantidad + "</td><td>" + subtotalItem +"</td></tr>" );
        }
        $("#btnBuscar").on("click", function () {
            var nombreBusqueda = $("#filtroNombre").val();

            axios.get('/Venta/BuscarPorNombre', {
                params: {
                    nombre: nombreBusqueda
                }
            })
                .then(function (response) {
                    console.log(response.data);
                    var resultados = response.data;
                    var resultadosContainer = $("#resultados");
                    resultadosContainer.empty();

                    resultados.forEach(function (producto) {
                        resultadosContainer.append("<tr><td>" + producto.id + "</td><td>" + producto.nombreProducto + "</td><td>" + producto.descripcion + "</td><td>" + producto.importeProducto + "</td><td>" + producto.codigo + "</td><td><input type='number' min='1' value='1' class='form-control cantidad-input' /></td><td><button class='btn btn-primary agregar-btn'>Agregar</button></td></tr>");
                    });

                    $("#seccionResultadosBusqueda").toggle(resultados.length > 0);
                })
                .catch(function (error) {
                    console.error("Error al realizar la búsqueda:", error);
                });
        });

        $("#btnGenerarVenta").on("click", function () {
            if ($("#carrito tbody tr").length === 0) {
                $("#alertaCarritoVacio").fadeIn();
            } else {
              
                 $("#alertaCarritoVacio").fadeOut();
                
                var elementosCarrito = [];
                $("#carrito tbody tr").each(function () {
                    var nombre = $(this).find("td:eq(0)").text();
                    var importe = parseFloat($(this).find("td:eq(1)").text());
                    var cantidad = parseInt($(this).find("td:eq(2)").text());
                    var subtotal = parseFloat($(this).find("td:eq(3)").text());
                    var idFormaDePago = document.getElementById("formaDePago").value;
                    elementosCarrito.push({
                        Producto: {
                            Id: 0,
                            IdProveedor: 0,
                            NombreProducto: nombre,
                            Descripcion: "",
                            ImporteProducto: ""+importe,
                            Estado: true,
                            Codigo: "0",
                            
                        },
                        FormaDePago: {
                            Id: idFormaDePago
                        },
                        Cantidad: cantidad,
                        SubtotalItem: subtotal
                    });
                    console.log(elementosCarrito)
                });            
                axios.post('/Venta/GenerarVenta', elementosCarrito)
                    .then(function (response) {
                        console.log(response.data);
                       
                    })
                    .catch(function (error) {
                        console.error("Error al generar la venta:", error);
                       
                    });
               
            }
        });

        $("#btnBuscarCliente").click(function () {
            var nombre = $("#nombreCliente").val();
            var cuit = $("#cuitCliente").val();
            var apellido = $("#apellidoCliente").val();

            if (nombre || cuit || apellido) {
                $("#alertaClienteVacio").fadeOut();
                var clientePorBuscar = {
                    Nombre: nombre,
                    Apellido: apellido,
                    Cuit: cuit
                };

                console.log(clientePorBuscar)
                axios.get('/Cliente/ObtenerClienteByDato', { params: clientePorBuscar })
                    .then(function (response) {
                        console.log(response.data);
                        var dropdown = document.getElementById("dropdownClientes");
                       
                        response.data.forEach(function (cliente) {
                            var option = document.createElement("option");
                            option.value = cliente.id;
                            option.text = cliente.nombre + " " + cliente.apellido;
                            dropdown.add(option);
                        });
                    })
                    .catch(function (error) {
                        console.error("Error al generar la venta:", error);

                    });
            } else {
                $("#alertaClienteVacio").fadeIn();
            }
        });
    });
</script>